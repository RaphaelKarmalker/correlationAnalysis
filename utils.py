# Help text constants for the GUI

WORKFLOW_HELP_TEXT = """
üìã WORKFLOW OVERVIEW

1. FILE SELECTION
   ‚Ä¢ Trades CSV (Required): Your executed trades with timestamps and PnL
   ‚Ä¢ OHLCV CSV (Optional): Market data for technical indicators
   ‚Ä¢ Feature CSVs: External data sources (fear & greed, sentiment, etc.)

2. FEATURE LOADING
   ‚Ä¢ Click "Load Features" to scan all CSV files
   ‚Ä¢ System will detect available columns automatically
   ‚Ä¢ Chart indicators are computed from OHLCV if provided

3. FEATURE SELECTION
   ‚Ä¢ Select which features to analyze from CSV files
   ‚Ä¢ Select which technical indicators to include
   ‚Ä¢ Choose data transformations (z-score, rolling stats, etc.)
   ‚Ä¢ Set parameters for transformations

4. ANALYSIS SETTINGS
   ‚Ä¢ Number of bins: How many groups to divide feature values into
   ‚Ä¢ Binning method:
     - Equal width: Same range size for each bin
     - Equal count: Same number of trades per bin

5. EXECUTION
   ‚Ä¢ System merges trades with features by timestamp
   ‚Ä¢ Calculates performance metrics per feature bin
   ‚Ä¢ Generates comprehensive plots and CSV reports
   ‚Ä¢ Results saved in organized folders by feature

üìä DATA MERGING PROCESS

The system intelligently merges your trades with feature data:

‚Ä¢ Timestamp Alignment: Finds the most recent feature value before each trade
‚Ä¢ Forward-Fill Logic: Uses last known feature value if exact match not found
‚Ä¢ Multiple Sources: Combines CSV features with computed chart indicators
‚Ä¢ No-Leakage: Ensures no future data is used for past trades

üìà OUTPUT STRUCTURE

Results are organized as:
./data/trade_analysis/
‚îú‚îÄ‚îÄ feature_name_1/
‚îÇ   ‚îú‚îÄ‚îÄ Trade_Performance_plots.png
‚îÇ   ‚îú‚îÄ‚îÄ Risk_Metrics_plots.png
‚îÇ   ‚îî‚îÄ‚îÄ OHLCV_Overlay.png (if chart indicator)
‚îú‚îÄ‚îÄ feature_name_2/
‚îÇ   ‚îî‚îÄ‚îÄ ...
‚îî‚îÄ‚îÄ all_features/
    ‚îî‚îÄ‚îÄ trades_features_merged.csv
"""

INDICATORS_HELP_TEXT = """
üìä AVAILABLE INDICATORS

When you provide OHLCV data, the following technical indicators are automatically computed:

üîç TREND INDICATORS
‚Ä¢ EMA (8, 21, 50, 200): Exponential Moving Averages
‚Ä¢ SMA (10, 20, 50): Simple Moving Averages
‚Ä¢ MACD: Moving Average Convergence Divergence
‚Ä¢ MACD Signal & Histogram
‚Ä¢ ADX: Average Directional Index (trend strength)
‚Ä¢ Parabolic SAR: Stop and Reverse points

üìä MOMENTUM INDICATORS
‚Ä¢ RSI: Relative Strength Index (14-period)
‚Ä¢ Stochastic %K and %D: Stochastic oscillator
‚Ä¢ Williams %R: Williams Percent Range
‚Ä¢ CCI: Commodity Channel Index
‚Ä¢ MFI: Money Flow Index
‚Ä¢ Ultimate Oscillator: Multi-timeframe momentum

üìà VOLATILITY INDICATORS
‚Ä¢ Bollinger Bands (Upper, Middle, Lower)
‚Ä¢ Bollinger Band Width: Volatility measure
‚Ä¢ ATR: Average True Range
‚Ä¢ Keltner Channels: Volatility-based channels

üí∞ VOLUME INDICATORS
‚Ä¢ OBV: On-Balance Volume
‚Ä¢ VWAP: Volume Weighted Average Price
‚Ä¢ Volume SMA: Volume moving average
‚Ä¢ Accumulation/Distribution Line
‚Ä¢ Chaikin Money Flow

üéØ SUPPORT/RESISTANCE
‚Ä¢ Pivot Points: Classical pivot levels
‚Ä¢ Fibonacci Retracement levels
‚Ä¢ Key price levels based on recent highs/lows

‚ö° CUSTOM INDICATORS
‚Ä¢ Price Distance from EMAs: How far price is from key moving averages
‚Ä¢ Volume Ratio: Current volume vs average
‚Ä¢ Volatility Ratio: Current ATR vs historical average

üîÑ INDICATOR COMBINATIONS
You can combine multiple indicators in your analysis:
‚Ä¢ Use both trend and momentum indicators
‚Ä¢ Combine volume with price-based indicators
‚Ä¢ Mix different timeframe perspectives
‚Ä¢ Apply transformations to normalize different scales

üí° SELECTION TIPS
‚Ä¢ Start with 3-5 key indicators to avoid over-complexity
‚Ä¢ Choose indicators from different categories (trend, momentum, volume)
‚Ä¢ Consider the timeframe of your trades when selecting indicators
‚Ä¢ Use transformations to normalize indicators for better comparison
"""

CONVERSIONS_HELP_TEXT = """
üîß DATA TRANSFORMATIONS

Apply mathematical transformations to normalize and improve feature analysis:

üìä STANDARDIZATION
‚Ä¢ zscore: Standard z-score normalization (mean=0, std=1)
‚Ä¢ robust_zscore: Uses median and MAD instead of mean/std
‚Ä¢ expanding_zscore: Uses only historical data (no future leakage)
‚Ä¢ ewm_zscore: Exponentially weighted z-score

üîÑ ROLLING STATISTICS
‚Ä¢ rolling_zscore: Z-score using rolling window
  Parameters: window=20 (default), leak_safe=true
‚Ä¢ rolling_robust_zscore: Robust z-score with rolling window
  Parameters: window=50, leak_safe=true
‚Ä¢ rolling_minmax: Rolling min-max normalization
  Parameters: window=100, leak_safe=true

üìè SCALING
‚Ä¢ minmax: Scale to 0-1 range using global min/max
‚Ä¢ expanding_minmax: Scale using only historical min/max
‚Ä¢ normalize: Center and scale by range

üìà CHANGE RATES
‚Ä¢ pct_change: Percentage change from previous value
  Parameters: periods=1 (how many periods back)
‚Ä¢ diff: Absolute difference from previous value
  Parameters: periods=1
‚Ä¢ log_return: Logarithmic return
  Parameters: periods=1

üéØ PERCENTILES
‚Ä¢ rank_pct: Convert to percentile ranks (0-1)
‚Ä¢ winsorize_rolling: Clip extreme values to rolling percentiles
  Parameters: window=250, lower=0.01, upper=0.99

üî¢ PARAMETER EXAMPLES

Rolling Z-Score with custom window:
Parameters: window=30,leak_safe=true

EWM Z-Score with custom span:
Parameters: span=20,leak_safe=true

Percentage change over 5 periods:
Parameters: periods=5

Winsorization removing top/bottom 5%:
Parameters: lower=0.05,upper=0.95,window=200

üí° WHEN TO USE WHICH TRANSFORMATION

‚Ä¢ zscore/robust_zscore: When you want to normalize across entire dataset
‚Ä¢ rolling_zscore: When you want recent normalization (adaptable to regime changes)
‚Ä¢ expanding_zscore: Safest for backtesting (no future data leakage)
‚Ä¢ minmax: When you need bounded 0-1 output
‚Ä¢ pct_change: For momentum/change analysis
‚Ä¢ rank_pct: When relative ranking matters more than absolute values

‚ö†Ô∏è LEAKAGE CONSIDERATIONS

For realistic backtesting, use leak_safe=true options:
‚Ä¢ expanding_zscore: Only uses past data
‚Ä¢ rolling_zscore with leak_safe=true
‚Ä¢ ewm_zscore with leak_safe=true

These ensure no future information contaminates historical analysis.
"""

FILE_FORMATS_HELP_TEXT = """
üìÅ REQUIRED FILE FORMATS

üîπ TRADES CSV (Required)
Must contain these columns:
‚Ä¢ timestamp: Trade execution time (YYYY-MM-DD HH:MM:SS or ISO format)
‚Ä¢ realized_pnl: Profit/loss for each trade (numeric)

Optional but recommended:
‚Ä¢ closed_timestamp: Trade exit time
‚Ä¢ qty/size: Position size (for long/short detection)
‚Ä¢ side: 'long' or 'short' (explicit side declaration)

Example:
timestamp,realized_pnl,qty,side
2024-01-15 10:30:00,150.50,1000,long
2024-01-15 11:45:00,-75.25,-500,short

üîπ OHLCV CSV (Optional - for chart indicators)
Must contain these columns:
‚Ä¢ timestamp: Candle time
‚Ä¢ open: Opening price
‚Ä¢ high: Highest price
‚Ä¢ low: Lowest price  
‚Ä¢ close: Closing price
‚Ä¢ volume: Trading volume

Example:
timestamp,open,high,low,close,volume
2024-01-15 10:00:00,45.50,46.20,45.30,46.10,125000
2024-01-15 11:00:00,46.10,46.50,45.80,46.25,98000

üîπ FEATURE CSV FILES (Optional but recommended)
Can contain any numeric features with timestamps:
‚Ä¢ timestamp: Feature observation time
‚Ä¢ feature1, feature2, ...: Any numeric features

Example - Fear & Greed Index:
timestamp,fear_greed,vix,sentiment_score
2024-01-15 00:00:00,25,18.5,0.65
2024-01-16 00:00:00,31,17.2,0.72

Example - Custom Indicators:
timestamp,rsi_daily,macd_4h,volume_ratio
2024-01-15 08:00:00,65.2,0.15,1.25
2024-01-15 12:00:00,58.7,0.08,0.95

üìÖ TIMESTAMP FORMATS SUPPORTED

The system automatically detects these formats:
‚Ä¢ ISO Format: 2024-01-15T10:30:00
‚Ä¢ Standard: 2024-01-15 10:30:00
‚Ä¢ Date Only: 2024-01-15 (assumes 00:00:00)
‚Ä¢ Unix Timestamp: 1705312200
‚Ä¢ With Timezone: 2024-01-15 10:30:00+00:00

üîó DATA MERGING LOGIC

1. All files are loaded and timestamps converted to datetime
2. Features are aligned to trade timestamps using forward-fill
3. The system finds the most recent feature value before each trade
4. Missing values are handled gracefully (forward-filled or excluded)
5. Chart indicators are computed from OHLCV and merged similarly

üìä OUTPUT FILES

The analysis generates:
‚Ä¢ CSV summaries: Performance metrics per feature bin
‚Ä¢ PNG plots: Visual analysis for each feature
‚Ä¢ trades_features_merged.csv: Complete dataset with all features aligned

üí° TIPS FOR BEST RESULTS

‚Ä¢ Ensure timestamps are in chronological order
‚Ä¢ Use consistent timezone across all files
‚Ä¢ Higher frequency data (1min, 5min) gives better trade alignment
‚Ä¢ Include multiple data sources for richer analysis
‚Ä¢ Clean your data beforehand (remove outliers, handle missing values)
"""

ADVANCED_HELP_TEXT = """
‚öôÔ∏è ADVANCED FEATURES & SETTINGS

üéØ BINNING STRATEGIES

Equal Width (Size):
‚Ä¢ Divides feature range into equal-sized intervals
‚Ä¢ Good for normally distributed features
‚Ä¢ May have uneven trade counts per bin
‚Ä¢ Example: RSI 0-20, 20-40, 40-60, 60-80, 80-100

Equal Count (Amount):
‚Ä¢ Same number of trades in each bin
‚Ä¢ Better for skewed distributions
‚Ä¢ Adaptive bin boundaries
‚Ä¢ Ensures statistical significance in each bin

üìä PERFORMANCE METRICS CALCULATED

For each feature bin, the system computes:

Basic Metrics:
‚Ä¢ Mean PnL, Total PnL, Trade Count
‚Ä¢ Win Rate, Profit Factor
‚Ä¢ Gross Profit, Gross Loss

Risk Metrics:
‚Ä¢ Median PnL, PnL Standard Deviation
‚Ä¢ Value at Risk (VaR 5%), Conditional VaR
‚Ä¢ Sharpe Ratio, Sortino Ratio
‚Ä¢ Maximum Drawdown

Advanced Metrics:
‚Ä¢ Expectancy, Payoff Ratio
‚Ä¢ Average Win, Average Loss
‚Ä¢ Max Win/Loss Streaks
‚Ä¢ Average Trade Duration

Long/Short Breakdown:
‚Ä¢ Separate metrics for long and short trades
‚Ä¢ Win rates by direction
‚Ä¢ PnL distribution by side

üîÑ CORRELATION & LAG ANALYSIS

Cross-Correlation:
‚Ä¢ Analyzes lead/lag relationships
‚Ä¢ Finds optimal timing offsets
‚Ä¢ Identifies predictive patterns

Rolling Correlations:
‚Ä¢ Time-varying relationship strength
‚Ä¢ Regime change detection
‚Ä¢ Correlation stability analysis

üé® VISUALIZATION OUTPUTS

Per Feature Analysis:
‚Ä¢ Performance vs Feature Value (bar charts)
‚Ä¢ Risk Metrics Comparison
‚Ä¢ Expectancy & Payoff Analysis
‚Ä¢ Streak & Drawdown Analysis
‚Ä¢ Duration Analysis
‚Ä¢ Long/Short Performance Split

Chart Indicator Overlays:
‚Ä¢ OHLCV candlestick charts
‚Ä¢ Indicator overlay plots
‚Ä¢ Visual pattern recognition
‚Ä¢ Entry/exit point analysis

üìà MULTI-FEATURE ANALYSIS

Feature Comparison:
‚Ä¢ Cross-feature performance matrix
‚Ä¢ Feature importance ranking
‚Ä¢ Interaction effects
‚Ä¢ Portfolio-level insights

Correlation Matrix:
‚Ä¢ Feature inter-dependencies
‚Ä¢ Redundancy detection
‚Ä¢ Diversification opportunities

üîß TECHNICAL CONSIDERATIONS

Memory Management:
‚Ä¢ Large datasets are processed in chunks
‚Ä¢ Efficient timestamp alignment algorithms
‚Ä¢ Garbage collection for memory optimization

Performance Optimization:
‚Ä¢ Vectorized calculations using pandas/numpy
‚Ä¢ Parallel processing for independent features
‚Ä¢ Caching of computed indicators

Error Handling:
‚Ä¢ Graceful handling of missing data
‚Ä¢ Timestamp format auto-detection
‚Ä¢ Robust numeric conversions
‚Ä¢ Detailed error logging

üöÄ BEST PRACTICES

Data Quality:
‚Ä¢ Clean timestamps and remove duplicates
‚Ä¢ Handle missing values appropriately
‚Ä¢ Validate data ranges and outliers
‚Ä¢ Ensure sufficient data history

Feature Engineering:
‚Ä¢ Start with raw features, then apply transformations
‚Ä¢ Use leak-safe transformations for backtesting
‚Ä¢ Combine multiple timeframes
‚Ä¢ Consider regime-dependent features

Analysis Workflow:
‚Ä¢ Begin with fewer features to understand patterns
‚Ä¢ Gradually add complexity
‚Ä¢ Validate results with out-of-sample data
‚Ä¢ Document your findings and assumptions

Interpretation:
‚Ä¢ Consider statistical significance (trade counts)
‚Ä¢ Look for consistent patterns across bins
‚Ä¢ Verify results make economic sense
‚Ä¢ Be aware of survivorship bias and data mining

üí° TROUBLESHOOTING

Common Issues:
‚Ä¢ Timestamp misalignment: Check timezone consistency
‚Ä¢ No features loaded: Verify CSV column names
‚Ä¢ Empty bins: Reduce number of bins or check data range
‚Ä¢ Memory errors: Process smaller date ranges or fewer features
‚Ä¢ Slow performance: Reduce data frequency or feature count

Performance Tips:
‚Ä¢ Use 1-hour or daily data for initial exploration
‚Ä¢ Limit to 10-15 features for comprehensive analysis
‚Ä¢ Pre-filter trades to relevant time periods
‚Ä¢ Use SSD storage for large datasets
"""

# Conversion options for feature transformations
CONVERSION_OPTIONS = [
    "None", "zscore", "robust_zscore", "rolling_zscore",
    "expanding_zscore", "ewm_zscore", "rolling_robust_zscore",
    "minmax", "rolling_minmax", "expanding_minmax",
    "pct_change", "diff", "log_return"
]
